
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000029e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000020  00800060  0000029e  00000312  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000332  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000364  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000080  00000000  00000000  000003a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000d6d  00000000  00000000  00000420  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006ff  00000000  00000000  0000118d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004ad  00000000  00000000  0000188c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000b0  00000000  00000000  00001d3c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000007a1  00000000  00000000  00001dec  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000004e4  00000000  00000000  0000258d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000090  00000000  00000000  00002a71  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee e9       	ldi	r30, 0x9E	; 158
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 38       	cpi	r26, 0x80	; 128
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 4d 01 	jmp	0x29a	; 0x29a <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
#define F_CPU 8000000UL
#include <util/delay.h>


int main(void)
{
  82:	cf 93       	push	r28
  84:	df 93       	push	r29
  86:	00 d0       	rcall	.+0      	; 0x88 <main+0x6>
  88:	1f 92       	push	r1
  8a:	cd b7       	in	r28, 0x3d	; 61
  8c:	de b7       	in	r29, 0x3e	; 62
	
	MDIO_enuErrorStatus_t status1 ,status2 , status3 , status4 , status5,status6 , status7,status8 ;
	u8 result1 , result2 , result3 ;
	MDIO_voidInit();
  8e:	0e 94 df 00 	call	0x1be	; 0x1be <MDIO_voidInit>
	
	
	while(1)
	{
		status1=MDIO_enuGetPinValue(MDIO_enuPORTC, MDIO_enuPIN0,&result1);
  92:	ae 01       	movw	r20, r28
  94:	4f 5f       	subi	r20, 0xFF	; 255
  96:	5f 4f       	sbci	r21, 0xFF	; 255
  98:	60 e0       	ldi	r22, 0x00	; 0
  9a:	82 e0       	ldi	r24, 0x02	; 2
  9c:	0e 94 2a 01 	call	0x254	; 0x254 <MDIO_enuGetPinValue>
  a0:	f8 2e       	mov	r15, r24
		status2=MDIO_enuGetPinValue(MDIO_enuPORTC, MDIO_enuPIN1,&result2);
  a2:	ae 01       	movw	r20, r28
  a4:	4e 5f       	subi	r20, 0xFE	; 254
  a6:	5f 4f       	sbci	r21, 0xFF	; 255
  a8:	61 e0       	ldi	r22, 0x01	; 1
  aa:	82 e0       	ldi	r24, 0x02	; 2
  ac:	0e 94 2a 01 	call	0x254	; 0x254 <MDIO_enuGetPinValue>
  b0:	08 2f       	mov	r16, r24
		status3=MDIO_enuGetPinValue(MDIO_enuPORTC, MDIO_enuPIN2,&result3);
  b2:	ae 01       	movw	r20, r28
  b4:	4d 5f       	subi	r20, 0xFD	; 253
  b6:	5f 4f       	sbci	r21, 0xFF	; 255
  b8:	62 e0       	ldi	r22, 0x02	; 2
  ba:	82 e0       	ldi	r24, 0x02	; 2
  bc:	0e 94 2a 01 	call	0x254	; 0x254 <MDIO_enuGetPinValue>
  c0:	18 2f       	mov	r17, r24
					
					if(status1==MDIO_enuOK)
  c2:	f1 10       	cpse	r15, r1
  c4:	0d c0       	rjmp	.+26     	; 0xe0 <main+0x5e>
					{
						if(result1 ==0)
  c6:	89 81       	ldd	r24, Y+1	; 0x01
  c8:	81 11       	cpse	r24, r1
  ca:	05 c0       	rjmp	.+10     	; 0xd6 <main+0x54>
						{
							status4=MDIO_enuSetPinValue(MDIO_enuPORTA , MDIO_enuPIN0 , MDIO_enuHIGH);
  cc:	41 e0       	ldi	r20, 0x01	; 1
  ce:	60 e0       	ldi	r22, 0x00	; 0
  d0:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <MDIO_enuSetPinValue>
  d4:	05 c0       	rjmp	.+10     	; 0xe0 <main+0x5e>
						}
						else
						{
							status5=MDIO_enuSetPinValue(MDIO_enuPORTA , MDIO_enuPIN0 , MDIO_enuLOW);
  d6:	40 e0       	ldi	r20, 0x00	; 0
  d8:	60 e0       	ldi	r22, 0x00	; 0
  da:	80 e0       	ldi	r24, 0x00	; 0
  dc:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <MDIO_enuSetPinValue>
						}
						
					}
					if(status2==MDIO_enuOK)
  e0:	01 11       	cpse	r16, r1
  e2:	0d c0       	rjmp	.+26     	; 0xfe <main+0x7c>
					{
						if(result2 ==0)
  e4:	8a 81       	ldd	r24, Y+2	; 0x02
  e6:	81 11       	cpse	r24, r1
  e8:	05 c0       	rjmp	.+10     	; 0xf4 <main+0x72>
						{
							status4=MDIO_enuSetPinValue(MDIO_enuPORTA , MDIO_enuPIN1 , MDIO_enuHIGH);
  ea:	41 e0       	ldi	r20, 0x01	; 1
  ec:	61 e0       	ldi	r22, 0x01	; 1
  ee:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <MDIO_enuSetPinValue>
  f2:	05 c0       	rjmp	.+10     	; 0xfe <main+0x7c>
						}
						else
						{
							status5=MDIO_enuSetPinValue(MDIO_enuPORTA , MDIO_enuPIN1 , MDIO_enuLOW);
  f4:	40 e0       	ldi	r20, 0x00	; 0
  f6:	61 e0       	ldi	r22, 0x01	; 1
  f8:	80 e0       	ldi	r24, 0x00	; 0
  fa:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <MDIO_enuSetPinValue>
						}
						
					}
					if(status3==MDIO_enuOK)
  fe:	11 11       	cpse	r17, r1
 100:	c8 cf       	rjmp	.-112    	; 0x92 <main+0x10>
					{
						if(result3 ==0)
 102:	8b 81       	ldd	r24, Y+3	; 0x03
 104:	81 11       	cpse	r24, r1
 106:	05 c0       	rjmp	.+10     	; 0x112 <main+0x90>
						{
							status4=MDIO_enuSetPinValue(MDIO_enuPORTA , MDIO_enuPIN2 , MDIO_enuHIGH);
 108:	41 e0       	ldi	r20, 0x01	; 1
 10a:	62 e0       	ldi	r22, 0x02	; 2
 10c:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <MDIO_enuSetPinValue>
 110:	c0 cf       	rjmp	.-128    	; 0x92 <main+0x10>
						}
						else
						{
							status5=MDIO_enuSetPinValue(MDIO_enuPORTA , MDIO_enuPIN2 , MDIO_enuLOW);
 112:	40 e0       	ldi	r20, 0x00	; 0
 114:	62 e0       	ldi	r22, 0x02	; 2
 116:	80 e0       	ldi	r24, 0x00	; 0
 118:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <MDIO_enuSetPinValue>
 11c:	ba cf       	rjmp	.-140    	; 0x92 <main+0x10>

0000011e <MDIO_enuSetPinConfigration>:
		Local_strPtrCurrPort->PORT = (u8)Copy_enuPortState;
	
	}
	return Ret_enuError;
	
}
 11e:	85 30       	cpi	r24, 0x05	; 5
 120:	08 f0       	brcs	.+2      	; 0x124 <MDIO_enuSetPinConfigration+0x6>
 122:	45 c0       	rjmp	.+138    	; 0x1ae <MDIO_enuSetPinConfigration+0x90>
 124:	69 30       	cpi	r22, 0x09	; 9
 126:	08 f0       	brcs	.+2      	; 0x12a <MDIO_enuSetPinConfigration+0xc>
 128:	44 c0       	rjmp	.+136    	; 0x1b2 <MDIO_enuSetPinConfigration+0x94>
 12a:	43 30       	cpi	r20, 0x03	; 3
 12c:	08 f0       	brcs	.+2      	; 0x130 <MDIO_enuSetPinConfigration+0x12>
 12e:	43 c0       	rjmp	.+134    	; 0x1b6 <MDIO_enuSetPinConfigration+0x98>
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	fc 01       	movw	r30, r24
 134:	ee 0f       	add	r30, r30
 136:	ff 1f       	adc	r31, r31
 138:	8e 0f       	add	r24, r30
 13a:	9f 1f       	adc	r25, r31
 13c:	ee 27       	eor	r30, r30
 13e:	ff 27       	eor	r31, r31
 140:	e8 1b       	sub	r30, r24
 142:	f9 0b       	sbc	r31, r25
 144:	f9 96       	adiw	r30, 0x39	; 57
 146:	41 11       	cpse	r20, r1
 148:	0c c0       	rjmp	.+24     	; 0x162 <MDIO_enuSetPinConfigration+0x44>
 14a:	21 81       	ldd	r18, Z+1	; 0x01
 14c:	81 e0       	ldi	r24, 0x01	; 1
 14e:	90 e0       	ldi	r25, 0x00	; 0
 150:	02 c0       	rjmp	.+4      	; 0x156 <MDIO_enuSetPinConfigration+0x38>
 152:	88 0f       	add	r24, r24
 154:	99 1f       	adc	r25, r25
 156:	6a 95       	dec	r22
 158:	e2 f7       	brpl	.-8      	; 0x152 <MDIO_enuSetPinConfigration+0x34>
 15a:	82 2b       	or	r24, r18
 15c:	81 83       	std	Z+1, r24	; 0x01
 15e:	80 e0       	ldi	r24, 0x00	; 0
 160:	08 95       	ret
 162:	41 30       	cpi	r20, 0x01	; 1
 164:	89 f4       	brne	.+34     	; 0x188 <MDIO_enuSetPinConfigration+0x6a>
 166:	21 81       	ldd	r18, Z+1	; 0x01
 168:	81 e0       	ldi	r24, 0x01	; 1
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	02 c0       	rjmp	.+4      	; 0x172 <MDIO_enuSetPinConfigration+0x54>
 16e:	88 0f       	add	r24, r24
 170:	99 1f       	adc	r25, r25
 172:	6a 95       	dec	r22
 174:	e2 f7       	brpl	.-8      	; 0x16e <MDIO_enuSetPinConfigration+0x50>
 176:	98 2f       	mov	r25, r24
 178:	90 95       	com	r25
 17a:	92 23       	and	r25, r18
 17c:	91 83       	std	Z+1, r25	; 0x01
 17e:	92 81       	ldd	r25, Z+2	; 0x02
 180:	89 2b       	or	r24, r25
 182:	82 83       	std	Z+2, r24	; 0x02
 184:	80 e0       	ldi	r24, 0x00	; 0
 186:	08 95       	ret
 188:	42 30       	cpi	r20, 0x02	; 2
 18a:	b9 f4       	brne	.+46     	; 0x1ba <MDIO_enuSetPinConfigration+0x9c>
 18c:	21 81       	ldd	r18, Z+1	; 0x01
 18e:	81 e0       	ldi	r24, 0x01	; 1
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	02 c0       	rjmp	.+4      	; 0x198 <MDIO_enuSetPinConfigration+0x7a>
 194:	88 0f       	add	r24, r24
 196:	99 1f       	adc	r25, r25
 198:	6a 95       	dec	r22
 19a:	e2 f7       	brpl	.-8      	; 0x194 <MDIO_enuSetPinConfigration+0x76>
 19c:	80 95       	com	r24
 19e:	92 2f       	mov	r25, r18
 1a0:	98 23       	and	r25, r24
 1a2:	91 83       	std	Z+1, r25	; 0x01
 1a4:	92 81       	ldd	r25, Z+2	; 0x02
 1a6:	89 23       	and	r24, r25
 1a8:	82 83       	std	Z+2, r24	; 0x02
 1aa:	80 e0       	ldi	r24, 0x00	; 0
 1ac:	08 95       	ret
 1ae:	82 e0       	ldi	r24, 0x02	; 2
 1b0:	08 95       	ret
 1b2:	83 e0       	ldi	r24, 0x03	; 3
 1b4:	08 95       	ret
 1b6:	84 e0       	ldi	r24, 0x04	; 4
 1b8:	08 95       	ret
 1ba:	80 e0       	ldi	r24, 0x00	; 0
 1bc:	08 95       	ret

000001be <MDIO_voidInit>:
 1be:	cf 93       	push	r28
 1c0:	c0 e0       	ldi	r28, 0x00	; 0
 1c2:	0e c0       	rjmp	.+28     	; 0x1e0 <MDIO_voidInit+0x22>
 1c4:	6c 2f       	mov	r22, r28
 1c6:	67 70       	andi	r22, 0x07	; 7
 1c8:	ec 2f       	mov	r30, r28
 1ca:	f0 e0       	ldi	r31, 0x00	; 0
 1cc:	e0 5a       	subi	r30, 0xA0	; 160
 1ce:	ff 4f       	sbci	r31, 0xFF	; 255
 1d0:	40 81       	ld	r20, Z
 1d2:	8c 2f       	mov	r24, r28
 1d4:	86 95       	lsr	r24
 1d6:	86 95       	lsr	r24
 1d8:	86 95       	lsr	r24
 1da:	0e 94 8f 00 	call	0x11e	; 0x11e <MDIO_enuSetPinConfigration>
 1de:	cf 5f       	subi	r28, 0xFF	; 255
 1e0:	c0 32       	cpi	r28, 0x20	; 32
 1e2:	80 f3       	brcs	.-32     	; 0x1c4 <MDIO_voidInit+0x6>
 1e4:	cf 91       	pop	r28
 1e6:	08 95       	ret

000001e8 <MDIO_enuSetPinValue>:
 1e8:	85 30       	cpi	r24, 0x05	; 5
 1ea:	60 f5       	brcc	.+88     	; 0x244 <MDIO_enuSetPinValue+0x5c>
 1ec:	69 30       	cpi	r22, 0x09	; 9
 1ee:	60 f5       	brcc	.+88     	; 0x248 <MDIO_enuSetPinValue+0x60>
 1f0:	42 30       	cpi	r20, 0x02	; 2
 1f2:	60 f5       	brcc	.+88     	; 0x24c <MDIO_enuSetPinValue+0x64>
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	fc 01       	movw	r30, r24
 1f8:	ee 0f       	add	r30, r30
 1fa:	ff 1f       	adc	r31, r31
 1fc:	8e 0f       	add	r24, r30
 1fe:	9f 1f       	adc	r25, r31
 200:	ee 27       	eor	r30, r30
 202:	ff 27       	eor	r31, r31
 204:	e8 1b       	sub	r30, r24
 206:	f9 0b       	sbc	r31, r25
 208:	f9 96       	adiw	r30, 0x39	; 57
 20a:	41 11       	cpse	r20, r1
 20c:	0d c0       	rjmp	.+26     	; 0x228 <MDIO_enuSetPinValue+0x40>
 20e:	22 81       	ldd	r18, Z+2	; 0x02
 210:	81 e0       	ldi	r24, 0x01	; 1
 212:	90 e0       	ldi	r25, 0x00	; 0
 214:	02 c0       	rjmp	.+4      	; 0x21a <MDIO_enuSetPinValue+0x32>
 216:	88 0f       	add	r24, r24
 218:	99 1f       	adc	r25, r25
 21a:	6a 95       	dec	r22
 21c:	e2 f7       	brpl	.-8      	; 0x216 <MDIO_enuSetPinValue+0x2e>
 21e:	80 95       	com	r24
 220:	82 23       	and	r24, r18
 222:	82 83       	std	Z+2, r24	; 0x02
 224:	80 e0       	ldi	r24, 0x00	; 0
 226:	08 95       	ret
 228:	41 30       	cpi	r20, 0x01	; 1
 22a:	91 f4       	brne	.+36     	; 0x250 <MDIO_enuSetPinValue+0x68>
 22c:	22 81       	ldd	r18, Z+2	; 0x02
 22e:	81 e0       	ldi	r24, 0x01	; 1
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	02 c0       	rjmp	.+4      	; 0x238 <MDIO_enuSetPinValue+0x50>
 234:	88 0f       	add	r24, r24
 236:	99 1f       	adc	r25, r25
 238:	6a 95       	dec	r22
 23a:	e2 f7       	brpl	.-8      	; 0x234 <MDIO_enuSetPinValue+0x4c>
 23c:	82 2b       	or	r24, r18
 23e:	82 83       	std	Z+2, r24	; 0x02
 240:	80 e0       	ldi	r24, 0x00	; 0
 242:	08 95       	ret
 244:	82 e0       	ldi	r24, 0x02	; 2
 246:	08 95       	ret
 248:	83 e0       	ldi	r24, 0x03	; 3
 24a:	08 95       	ret
 24c:	85 e0       	ldi	r24, 0x05	; 5
 24e:	08 95       	ret
 250:	80 e0       	ldi	r24, 0x00	; 0
 252:	08 95       	ret

00000254 <MDIO_enuGetPinValue>:
{
	
	MDIO_enuErrorStatus_t Ret_enuError = MDIO_enuNOK;
	
	// Validate input parameters
	if (IS_INVALID_PORT_NUM(Copy_enuPortNum))
 254:	85 30       	cpi	r24, 0x05	; 5
 256:	d8 f4       	brcc	.+54     	; 0x28e <MDIO_enuGetPinValue+0x3a>
	{
		Ret_enuError = MDIO_enuINVALID_PortNum;
		
	}
	else if (IS_INVALID_PIN_NUM(Copy_enuPinNum))
 258:	69 30       	cpi	r22, 0x09	; 9
 25a:	d8 f4       	brcc	.+54     	; 0x292 <MDIO_enuGetPinValue+0x3e>
	{
		Ret_enuError = MDIO_enuINVALID_PinNum;
	}
	else if (IS_INVALID_PTR(Add_pu8PinValue))
 25c:	41 15       	cp	r20, r1
 25e:	51 05       	cpc	r21, r1
 260:	d1 f0       	breq	.+52     	; 0x296 <MDIO_enuGetPinValue+0x42>
	}
	else
	{
		Ret_enuError = MDIO_enuOK;
		// Get the address of the port registers
		MDIO_strPortRegElement_t* Local_strPtrCurrPort =(((MDIO_PORT_REG_BASE_ADD) - (((u8)Copy_enuPortNum) * 3)));
 262:	90 e0       	ldi	r25, 0x00	; 0
 264:	fc 01       	movw	r30, r24
 266:	ee 0f       	add	r30, r30
 268:	ff 1f       	adc	r31, r31
 26a:	8e 0f       	add	r24, r30
 26c:	9f 1f       	adc	r25, r31
 26e:	ee 27       	eor	r30, r30
 270:	ff 27       	eor	r31, r31
 272:	e8 1b       	sub	r30, r24
 274:	f9 0b       	sbc	r31, r25
		// Read the pin value and store it in the provided pointer
		*Add_pu8PinValue = GET_BIT(Local_strPtrCurrPort->PIN, Copy_enuPinNum);
 276:	81 ad       	ldd	r24, Z+57	; 0x39
 278:	90 e0       	ldi	r25, 0x00	; 0
 27a:	02 c0       	rjmp	.+4      	; 0x280 <MDIO_enuGetPinValue+0x2c>
 27c:	95 95       	asr	r25
 27e:	87 95       	ror	r24
 280:	6a 95       	dec	r22
 282:	e2 f7       	brpl	.-8      	; 0x27c <MDIO_enuGetPinValue+0x28>
 284:	81 70       	andi	r24, 0x01	; 1
 286:	fa 01       	movw	r30, r20
 288:	80 83       	st	Z, r24
	{
		Ret_enuError = MDIO_enuNULL_PTR;
	}
	else
	{
		Ret_enuError = MDIO_enuOK;
 28a:	80 e0       	ldi	r24, 0x00	; 0
 28c:	08 95       	ret
	MDIO_enuErrorStatus_t Ret_enuError = MDIO_enuNOK;
	
	// Validate input parameters
	if (IS_INVALID_PORT_NUM(Copy_enuPortNum))
	{
		Ret_enuError = MDIO_enuINVALID_PortNum;
 28e:	82 e0       	ldi	r24, 0x02	; 2
 290:	08 95       	ret
		
	}
	else if (IS_INVALID_PIN_NUM(Copy_enuPinNum))
	{
		Ret_enuError = MDIO_enuINVALID_PinNum;
 292:	83 e0       	ldi	r24, 0x03	; 3
 294:	08 95       	ret
	}
	else if (IS_INVALID_PTR(Add_pu8PinValue))
	{
		Ret_enuError = MDIO_enuNULL_PTR;
 296:	87 e0       	ldi	r24, 0x07	; 7
		*Add_pu8PinValue = GET_BIT(Local_strPtrCurrPort->PIN, Copy_enuPinNum);

	}
	return Ret_enuError;
	
}
 298:	08 95       	ret

0000029a <_exit>:
 29a:	f8 94       	cli

0000029c <__stop_program>:
 29c:	ff cf       	rjmp	.-2      	; 0x29c <__stop_program>
